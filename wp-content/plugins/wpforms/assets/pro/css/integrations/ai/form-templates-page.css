#wpforms-setup-templates-list .wpforms-template#wpforms-template-generate:hover, #wpforms-setup-templates-list .wpforms-template#wpforms-template-generate.selected {
  box-shadow: 0 0 0 2px #5c24a9, 0 3px 4px rgba(0, 0, 0, 0.15);
}

#wpforms-setup-templates-list .wpforms-template#wpforms-template-generate .wpforms-template-thumbnail {
  background-color: #faf5fe;
}

#wpforms-setup-templates-list .wpforms-template#wpforms-template-generate .wpforms-template-name-wrap {
  display: flex;
  max-height: 40px;
}

#wpforms-setup-templates-list .wpforms-template#wpforms-template-generate .wpforms-template-name-wrap .wpforms-template-name {
  padding-right: 10px;
}

#wpforms-setup-templates-list .wpforms-template#wpforms-template-generate .wpforms-template-name-wrap .wpforms-badge {
  box-sizing: border-box;
  opacity: 1;
  font-size: 8px;
  padding: 6px 8px;
  height: 18px;
  margin-top: 20px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
